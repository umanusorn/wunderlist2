import java.util.regex.Pattern

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://jitpack.io" }
        maven { url "https://repo.commonsware.com.s3.amazonaws.com"}
        jcenter()

    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'

    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url "https://repo.commonsware.com.s3.amazonaws.com"}
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

task('increaseVersionCode') << {
    def manifestFile = file("AndroidManifest.xml")
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def versionCode = Integer.parseInt(matcher.group(1))
    def manifestContent = matcher.replaceAll("versionCode=\"" + ++versionCode + "\"")
    manifestFile.write(manifestContent)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        defaultConfig {
            applicationId "com.vi8e.um.wunderlist2"
            minSdkVersion 18
            targetSdkVersion 23
            versionCode code
            versionName "UmDev" + code

            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            //       minifyEnabled false
            //       proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(
                            output.outputFile.parent,
                            //output.outputFile.name.replace(".apk", getDate()+"Beta-${variant.versionName}.apk"))
                            output.outputFile.name.replace("app-debug.apk", "WunerList-" + getDate() + ".apk"))
                }
            }
        }
    }
}


def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyMMdd')
    return formattedDate
}

dependencies {

    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/jncryptor-1.1.0.jar')
    compile files('libs/PayPalAndroidSDK-2.9.10.jar')
    compile files('libs/universal-image-loader-1.9.2.jar')
    compile('com.afollestad.material-dialogs:commons:0.8.1.0@aar') {
        transitive = true
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile project(':slideDateTimePicker')
    //testing
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
    androidTestCompile 'com.android.support:support-annotations:23.0.1'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:3.0'
    compile 'com.android.support:support-annotations:23.0.1'
    //compile 'com.mcxiaoke.viewpagerindicator:library:2.4.1@aar'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:cardview-v7:23.0.1'
    compile 'com.android.support:palette-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.getbase:floatingactionbutton:1.8.0'
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nhaarman.listviewanimations:lib-manipulation:3.1.0@aar'
    compile 'com.nhaarman.listviewanimations:lib-core-slh:3.1.0@aar'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.mcxiaoke.volley:library:1.0.18'
    compile 'com.google.guava:guava:18.0'
    //compile 'com.google.android.gms:play-services:8.1.0'
    compile files('libs/json_simple-1.1.jar')
    compile files('libs/dropbox-android-sdk-1.6.3.jar')
    compile files('libs/httpmime-4.0.3.jar')
    //multi img chooser with cam
    compile 'com.github.jaydeepw:poly-picker:v1.0.22'
    compile project(':dropboxChooserSDK')
}
